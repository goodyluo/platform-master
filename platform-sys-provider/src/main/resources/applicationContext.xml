<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
       <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
       <!--xmlns:util="http://www.springframework.org/schema/util"-->
       <!--xmlns:context="http://www.springframework.org/schema/context"-->
       <!--xmlns:tx="http://www.springframework.org/schema/tx"-->
       <!--xmlns:aop="http://www.springframework.org/schema/aop"-->
       <!--xsi:schemaLocation="http://www.springframework.org/schema/beans-->
	    <!--http://www.springframework.org/schema/beans/spring-beans.xsd-->
        <!--http://www.springframework.org/schema/context-->
        <!--http://www.springframework.org/schema/context/spring-context-4.1.xsd-->
        <!--http://www.springframework.org/schema/tx-->
        <!--http://www.springframework.org/schema/tx/spring-tx.xsd-->
        <!--http://www.springframework.org/schema/aop-->
        <!--http://www.springframework.org/schema/aop/spring-aop-4.1.xsd-->
        <!--http://www.springframework.org/schema/util-->
        <!--http://www.springframework.org/schema/util/spring-util-4.3.xsd">-->

    <!--<util:properties id="configuration" location="classpath:configuration.properties"/>-->
    <!--<context:component-scan base-package="com.juzhouyun.cloud.platform.**.service.impl"></context:component-scan>-->
    <!--<context:component-scan base-package="com.juzhouyun.cloud.platform.**.dao.impl"></context:component-scan>-->
    <!--<context:component-scan base-package="com.juzhouyun.cloud.base.**.dao.impl"></context:component-scan>-->
    <!--<context:component-scan base-package="com.juzhouyun.cloud.base.**.service.impl"></context:component-scan>-->
    <!--&lt;!&ndash; 基础数据源 &ndash;&gt;-->
    <!--<bean id="mainDataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
          <!--init-method="init" destroy-method="close"  primary="true">-->
        <!--<property name="driverClassName" value="#{configuration['db.driverClassName']}" />-->
        <!--<property name="url" value="#{configuration['db.url']}" />-->
        <!--<property name="username" value="#{configuration['db.username']}" />-->
        <!--<property name="password" value="#{configuration['db.password']}" />-->

        <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
        <!--<property name="initialSize" value="#{configuration['db.initialSize']}" />-->

        <!--&lt;!&ndash; 连接池最大数量 &ndash;&gt;-->
        <!--<property name="maxActive" value="#{configuration['db.maxActive']}" />-->

        <!--&lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
        <!--<property name="minIdle" value="#{configuration['db.minIdle']}" />-->

        <!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="#{configuration['db.maxWait']}" />-->

        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="#{configuration['db.timeBetweenEvictionRunsMillis']}" />-->

        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="#{configuration['db.minEvictableIdleTimeMillis']}" />-->

        <!--<property name="validationQuery" value="#{configuration['db.validationQuery']}" />-->
    <!--</bean>-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
        <!--<property name="basePackage" value="com.juzhouyun.cloud.base.dao"></property>-->

    <!--</bean>-->
    <!--<bean id="dataSource" class="com.juzhouyun.cloud.base.datasource.DynamicDataSource"  >-->
        <!--<property name="targetDataSources">-->
            <!--<map></map>-->
        <!--</property>-->
        <!--<property name="defaultTargetDataSource" ref="mainDataSource"></property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置事务管理器 &ndash;&gt;-->
    <!--<bean id="transactionManager"-->
          <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="mainDataSource"  />-->
    <!--</bean>-->


    <!--&lt;!&ndash; 开启事务注解驱动 &ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"  />-->

    <!--&lt;!&ndash; mybatis sessionFactory工厂 &ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="mainDataSource" />-->

        <!--&lt;!&ndash; 配置mybatis的日志记录 &ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />-->
        <!--<property name="mapperLocations" value="#{configuration['mybatis.mapper']}"></property>-->
    <!--</bean>-->

    <!--<bean id="excuteTimeMonitor" class="com.juzhouyun.cloud.base.interceptor.MethodTimeMonitoring"></bean>-->

    <!--<aop:config>-->
        <!--&lt;!&ndash;切入点&ndash;&gt;-->
        <!--<aop:pointcut id="methodPoint" expression="execution(*  com.juzhouyun.cloud.platform.service.impl.*.*(..) ) ||  execution(*  com.juzhouyun.cloud.base.dao.impl.*.*(..)) "/>-->

        <!--&lt;!&ndash;在该切入点使用自定义拦截器&ndash;&gt;-->
        <!--<aop:advisor pointcut-ref="methodPoint" advice-ref="excuteTimeMonitor"/>-->
    <!--</aop:config>-->

    <!--&lt;!&ndash; redis &ndash;&gt;-->
    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"></bean>-->

    <!--<bean id="jedisConnectionFactory"-->
          <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
        <!--<property name="hostName" value="#{configuration['redis.host']}" />-->
        <!--<property name="port" value="#{configuration['redis.port']}" />-->
        <!--<property name="database" value="#{configuration['redis.database']}" />-->
        <!--<property name="password" value="#{configuration['redis.pass']}" />-->
        <!--<property name="timeout" value="#{configuration['redis.timeout']}" />-->
        <!--<property name="poolConfig" ref="jedisPoolConfig" />-->

        <!--<property name="usePool" value="true" />-->
    <!--</bean>-->

    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">-->
        <!--<property name="connectionFactory" ref="jedisConnectionFactory" />-->
    <!--</bean>-->
<!--</beans>-->